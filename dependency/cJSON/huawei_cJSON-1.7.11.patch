diff -uprN cJSON-1.7.11/cJSON.c cJSON-1.7.11.bak/cJSON.c
--- cJSON-1.7.11/cJSON.c	2019-04-15 06:17:19.000000000 +0800
+++ cJSON-1.7.11.bak/cJSON.c	2019-07-01 17:28:07.948555541 +0800
@@ -156,7 +156,7 @@ static void * CJSON_CDECL internal_reall
 
 static internal_hooks global_hooks = { internal_malloc, internal_free, internal_realloc };
 
-static unsigned char* cJSON_strdup(const unsigned char* string, const internal_hooks * const hooks)
+CJSON_PUBLIC(unsigned char*) cJSON_strdup(const unsigned char* string)
 {
     size_t length = 0;
     unsigned char *copy = NULL;
@@ -167,7 +167,7 @@ static unsigned char* cJSON_strdup(const
     }
 
     length = strlen((const char*)string) + sizeof("");
-    copy = (unsigned char*)hooks->allocate(length);
+    copy = (unsigned char*)global_hooks.allocate(length);
     if (copy == NULL)
     {
         return NULL;
@@ -1923,7 +1923,7 @@ static cJSON_bool add_item_to_object(cJS
     }
     else
     {
-        new_key = (char*)cJSON_strdup((const unsigned char*)string, hooks);
+        new_key = (char*)cJSON_strdup((const unsigned char*)string);
         if (new_key == NULL)
         {
             return false;
@@ -2238,7 +2238,7 @@ static cJSON_bool replace_item_in_object
     {
         cJSON_free(replacement->string);
     }
-    replacement->string = (char*)cJSON_strdup((const unsigned char*)string, &global_hooks);
+    replacement->string = (char*)cJSON_strdup((const unsigned char*)string);
     replacement->type &= ~cJSON_StringIsConst;
 
     cJSON_ReplaceItemViaPointer(object, get_object_item(object, string, case_sensitive), replacement);
@@ -2333,7 +2333,7 @@ CJSON_PUBLIC(cJSON *) cJSON_CreateString
     if(item)
     {
         item->type = cJSON_String;
-        item->valuestring = (char*)cJSON_strdup((const unsigned char*)string, &global_hooks);
+        item->valuestring = (char*)cJSON_strdup((const unsigned char*)string);
         if(!item->valuestring)
         {
             cJSON_Delete(item);
@@ -2383,7 +2383,7 @@ CJSON_PUBLIC(cJSON *) cJSON_CreateRaw(co
     if(item)
     {
         item->type = cJSON_Raw;
-        item->valuestring = (char*)cJSON_strdup((const unsigned char*)raw, &global_hooks);
+        item->valuestring = (char*)cJSON_strdup((const unsigned char*)raw);
         if(!item->valuestring)
         {
             cJSON_Delete(item);
@@ -2585,7 +2585,7 @@ CJSON_PUBLIC(cJSON *) cJSON_Duplicate(co
     newitem->valuedouble = item->valuedouble;
     if (item->valuestring)
     {
-        newitem->valuestring = (char*)cJSON_strdup((unsigned char*)item->valuestring, &global_hooks);
+        newitem->valuestring = (char*)cJSON_strdup((unsigned char*)item->valuestring);
         if (!newitem->valuestring)
         {
             goto fail;
@@ -2593,7 +2593,7 @@ CJSON_PUBLIC(cJSON *) cJSON_Duplicate(co
     }
     if (item->string)
     {
-        newitem->string = (item->type&cJSON_StringIsConst) ? item->string : (char*)cJSON_strdup((unsigned char*)item->string, &global_hooks);
+        newitem->string = (item->type&cJSON_StringIsConst) ? item->string : (char*)cJSON_strdup((unsigned char*)item->string);
         if (!newitem->string)
         {
             goto fail;
diff -uprN cJSON-1.7.11/cJSON.h cJSON-1.7.11.bak/cJSON.h
--- cJSON-1.7.11/cJSON.h	2019-04-15 06:17:19.000000000 +0800
+++ cJSON-1.7.11.bak/cJSON.h	2019-07-01 17:40:41.200579438 +0800
@@ -278,6 +278,7 @@ CJSON_PUBLIC(double) cJSON_SetNumberHelp
 CJSON_PUBLIC(void *) cJSON_malloc(size_t size);
 CJSON_PUBLIC(void) cJSON_free(void *object);
 
+CJSON_PUBLIC(unsigned char*) cJSON_strdup(const unsigned char* string);
 #ifdef __cplusplus
 }
 #endif
diff -uprN cJSON-1.7.11/cJSON.h cJSON-1.7.11.bak/cJSON.h
--- cJSON-1.7.11/Makefile       2019-07-13 17:01:39.166311767 +0800
+++ cJSON-1.7.11.bak/Makefile   2019-07-13 17:02:47.010309371 +0800
@@ -12,8 +12,8 @@ LIBVERSION = 1.7.11
 CJSON_SOVERSION = 1
 UTILS_SOVERSION = 1

-CJSON_SO_LDFLAG=-Wl,-soname=$(CJSON_LIBNAME).so.$(CJSON_SOVERSION)
-UTILS_SO_LDFLAG=-Wl,-soname=$(UTILS_LIBNAME).so.$(UTILS_SOVERSION)
+CJSON_SO_LDFLAG=-Wl,-z,relro,-z,now,-soname=$(CJSON_LIBNAME).so.$(CJSON_SOVERSION)
+UTILS_SO_LDFLAG=-Wl,-z,relro,-z,now,-soname=$(UTILS_LIBNAME).so.$(UTILS_SOVERSION)

 PREFIX ?= /usr/local
 INCLUDE_PATH ?= include/cjson
